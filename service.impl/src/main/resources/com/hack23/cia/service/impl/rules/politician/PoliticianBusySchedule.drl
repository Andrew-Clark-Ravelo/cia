package com.hack23.cia.service.impl.rules.politician

import org.kie.api.runtime.KieRuntime

import com.hack23.cia.model.internal.application.data.politician.impl.ViewRiksdagenPolitician
import com.hack23.cia.model.internal.application.data.rules.impl.Status
import com.hack23.cia.service.impl.rules.PoliticianComplianceCheckImpl
import java.util.Date
import java.util.concurrent.TimeUnit
import java.lang.Math

function long busyFactor(Date firstAssignmentDate, long totalDaysServed){
  return ( totalDaysServed / Math.max(TimeUnit.MILLISECONDS.toDays(new Date().getTime() - firstAssignmentDate.getTime()), 1) );
}

rule "We have an politician with busy schedule, more than 4 current roles and busy past"
	dialect "java"
	salience 1000
    when
        $p : PoliticianComplianceCheckImpl( politician.active && politician.currentAssignments > 4 && ( busyFactor(politician.firstAssignmentDate, politician.totalDaysServed ) > 4 ))
    then
    	$p.addViolation( Status.MINOR, "PoliticianBusySchedule","Behavior", kcontext.getRule().getName(),"Influential");
end

rule "We have an politician with busy schedule, more than 5 current roles and busy past"
	dialect "java"
	salience 100
    when
        $p : PoliticianComplianceCheckImpl( politician.active && politician.currentAssignments > 5 && ( busyFactor(politician.firstAssignmentDate, politician.totalDaysServed ) > 5 ))
    then
    	$p.addViolation( Status.MAJOR, "PoliticianBusySchedule","Behavior", kcontext.getRule().getName(),"Influential");
end

rule "We have an politician with busy schedule, more than 6 current roles and busy past"
	dialect "java"
	salience 10
    when
        $p : PoliticianComplianceCheckImpl( politician.active && politician.currentAssignments > 6 && ( busyFactor(politician.firstAssignmentDate, politician.totalDaysServed ) > 6 ))
    then
    	$p.addViolation( Status.CRITICAL, "PoliticianBusySchedule","Behavior", kcontext.getRule().getName(),"Influential");
end